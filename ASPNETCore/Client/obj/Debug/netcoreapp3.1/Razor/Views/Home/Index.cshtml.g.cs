#pragma checksum "D:\Visual Studio Source\ASPNETCore\ASPNETCore\Client\Views\Home\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "ae9c1292cb375f3d4cc598a914d25bac07e9e0d6"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_Index), @"mvc.1.0.view", @"/Views/Home/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "D:\Visual Studio Source\ASPNETCore\ASPNETCore\Client\Views\_ViewImports.cshtml"
using Client;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\Visual Studio Source\ASPNETCore\ASPNETCore\Client\Views\_ViewImports.cshtml"
using Client.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"ae9c1292cb375f3d4cc598a914d25bac07e9e0d6", @"/Views/Home/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"3332004e6f18ccbec22253d7e177fe1fd5f40969", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "D:\Visual Studio Source\ASPNETCore\ASPNETCore\Client\Views\Home\Index.cshtml"
  
    ViewData["Title"] = "Home Page";

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
<div class=""text-center"">
    <h1 class=""display-4"">Welcome</h1>
    <p>Learn about <a href=""https://docs.microsoft.com/aspnet/core"">building Web apps with ASP.NET Core</a>.</p>
</div>
<link rel=""stylesheet"" href=""https://cdn.datatables.net/1.10.24/css/jquery.dataTables.min.css"">
<link rel=""stylesheet"" href=""https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css"" integrity=""sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm"" crossorigin=""anonymous"">

<div class=""my-3"">
    <!--Tombol Add-->
    <button type=""button"" class=""btn btn-success my-3"" data-bs-toggle='modal' data-bs-target=""#add"">
        <i class=""fa fa-plus""></i>
        Add Data
    </button>
    <table id=""tb_API"" class=""display"" style=""width:100%"">
        <thead>
            <tr>
                <th>No</th>
                <th>Name</th>
                <th>Email</th>
                <th>Gender</th>
                <th>Birth Date</th>
                <th>Action</th>
            </tr>
 ");
            WriteLiteral(@"       </thead>
    </table>

</div>

<!--Modal Add-->
<div class=""modal fade"" id=""add"" data-bs-backdrop=""static"" data-bs-keyboard=""false"" tabindex=""-1""
     aria-labelledby=""add"" aria-hidden=""true"">
    <div class=""modal-dialog"">
        <div class=""modal-content"">
            <div class=""modal-header"">
                <h5 class=""modal-title"" id=""add"">Register Account</h5>
                <button type=""button"" class=""btn-close"" data-bs-dismiss=""modal"" aria-label=""Close""></button>
            </div>
            <div class=""modal-body"">

                <div class=""mb-3"">
                    <label for=""name"" class=""form-label"">Name</label>
                    <input type=""text"" class=""form-control"" id=""name"" placeholder=""Enter your name"">
                    <label for=""email"" class=""form-label"">Email</label>
                    <input type=""email"" class=""form-control"" id=""email"" placeholder=""Enter your email"">
");
            WriteLiteral(@"                    <label for=""gender"" class=""form-label"">Gender</label>
                    <input type=""text"" class=""form-control"" id=""gender"" placeholder=""Enter your gender"">
                    <label for=""birthdate"" class=""form-label"">Birth Date</label>
                    <input type=""date"" class=""form-control"" id=""birthDate"" placeholder=""Enter your birth date"">
");
            WriteLiteral(@"                </div>
                    <button type=""submit"" class=""btn btn-primary"" onclick=""Insert()"">Submit</button>

            </div>
        </div>
    </div>
</div>

<!--Modal Update-->
<div id=""editView"">
<div class=""modal fade"" id=""update"" data-bs-backdrop=""static"" data-bs-keyboard=""false"" tabindex=""-1""
     aria-labelledby=""update"" aria-hidden=""true"">
    <div class=""modal-dialog"">
        <div class=""modal-content"">
            <div class=""modal-header"">
                <h5 class=""modal-title"" id=""update"">Editting Data</h5>
                <button type=""button"" class=""btn-close"" data-bs-dismiss=""modal"" aria-label=""Close""></button>
            </div>
            <div class=""mb-3"">
");
            WriteLiteral(@"                <label for=""update"" class=""form-label"">Id</label>
                <input type=""text"" class=""form-control"" id=""editid"">
                <label for=""update"" class=""form-label"">Edit Name</label>
                <input type=""text"" class=""form-control"" id=""editname"">
                <label for=""update"" class=""form-label"">Edit Email</label>
                <input type=""email"" class=""form-control"" id=""editemail"">
                <label for=""update"" class=""form-label"">Edit Gender</label>
                <input type=""text"" class=""form-control"" id=""editgender"">
                <label for=""update"" class=""form-label"">Edit Birth Date</label>
                <input type=""date"" class=""form-control"" id=""editbirthDate"">
            </div>
                    <button type=""submit"" class=""btn btn-primary"" onclick=""Update()"">Submit</button>
            </div>
        </div>
    </div>
</div>



");
            DefineSection("scripts", async() => {
                WriteLiteral(@"
    <script src=""https://code.jquery.com/jquery-3.5.1.js""></script>
    <script src=""https://cdn.datatables.net/1.10.24/js/jquery.dataTables.min.js""></script>
    <script src=""https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta3/dist/js/bootstrap.bundle.min.js""
            integrity=""sha384-JEW9xMcG8R+pH31jmWH6WWP0WintQrMb4s7ZOdauHnUtxwoG2vI5DkLtS3qm9Ekf"" crossorigin=""anonymous""></script>
    <script src=""https://unpkg.com/sweetalert/dist/sweetalert.min.js""></script>
    <script>
        let table = null;
        let count = 0;
        $(document).ready(function () {
            //table
            table = $('#tb_API').DataTable({
                ajax: {
                    url: ""https://localhost:44320/api/Employee"",
                    type: ""GET"",
                    dataSrc: ''
                },
                columns: [
                    {
                        ""data"": null,
                        ""render"": function () {
                            count++;
                   ");
                WriteLiteral(@"         return count;
                        }
                    },
                        { ""data"": ""name"" },
                        { ""data"": ""email"" },
                        { ""data"": ""gender"" },
                        { ""data"": ""birthDate"" },
                        {
                            ""data"": null,
                            ""render"": function (data, type, row)
                            {//kasih parameter
                                return '<button class=""btn btn-primary"" data-bs-toggle=""modal"" data-bs-target=""#update"" onclick=""getId('+ row['id'] +')""><i class=""fa fa-edit""></i>Edit Data</button>'
                                    +
                                    ' <button id=""deleteTable"" class=""btn btn-danger"" onclick=""sAlertDelete('+ row['id'] +')""><i class=""fa fa-trash""></i>Delete Data</button>';
                            },
                            ""orderable"": false,
                            ""searchable"": false
                        },
   ");
                WriteLiteral(@"                 ]
            })
        })
    </script>

    <script>
        let Insert = () => {
            let obj = new Object();

            obj.name = $(""#name"").val();
            obj.email = $(""#email"").val();
            //obj.password = $(""#password"").val();
            obj.birthDate = $(""#birthDate"").val();
            obj.gender = $(""#gender"").val();
            //obj.phone = $(""#phone"").val();
            //obj.roleId = parseInt($(""#roleId"").val());
            $.ajax({
                url: ""/Employee/Insert"",
                type: ""POST"",
                data: obj
            }).done((result) => {
                if (result == 200) {
                    $(""#add"").modal(""hide"");
                    sAlertAdd();
                }
                else {
                    alert(""Not Done"");
                }
            }).fail((error) => {
                console.log(error);
                alert(""gagal"");
            })
        }

        let sAlertAdd = ()");
                WriteLiteral(@" => {
            swal({
                title: ""Done"",
                text: ""Data successfully added."",
                icon: ""success"",
                button: ""Ok"",
            }).then(() => {
                location.reload(true);
            });
        }

        let Delete = (Id) => {
            $.ajax({
                url: `Employee/Delete/${Id}`,
                type: ""DELETE""
            }).done((result) => {
                console.log(result);
            }).fail((error) => {
                console.log(error);
                alert(""Failed to delete data"");
            })
        }

        let sAlertDelete = (Id) => {
            swal({
                title: ""Are you sure?"",
                text: ""Once deleted, you will not be able to recover this data!"",
                icon: ""warning"",
                buttons: true,
                dangerMode: true,
            })
                .then((willDelete) => {
                    if (willDelete) {
                ");
                WriteLiteral(@"        Delete(Id);
                        swal(""Data successfully deleted."", {
                            icon: ""success"",
                        }).then((willReload) => {
                            if (willReload) {
                                location.reload(true);
                            }
                        });
                    } else {
                        swal(""Your data is still save."");
                    }
                });
        }

        let Update = (data) => {

            $(""#editid"").val(data.id);        
            $(""#editname"").val(data.name);
            $(""#editemail"").val(data.email);
            $(""#editbirthDate"").val(data.birthDate);
            $(""#editgender"").val(data.gender);

            console.log(data);

            $.ajax({
                url: `/Employee/Update/${data.id}`,
                type: ""Put"",
                data: data
            }).done((result) => {
                console.log(result);
                i");
                WriteLiteral(@"f (result == 200) {
                    alert(""Data updated."");
                }
                else {
                    alert(""status code: "" + result);
                }

            }).fail((error) => {
                console.log(error);
                alert(""Data can't be updated."");
            })
        }

        let getId = (Id) => {
            $.ajax({
                type: ""GET"",
                url: `/Employee/GetById/${Id}`,
                success: (data) => {
                    $('#editView').html(data);
                    $('#update').modal();
                    //Update(data);
                    console.log(data);
                },
                error: (data) => {
                    console.log(data);
                }
            })
        }
    </script>
    
   
");
                WriteLiteral("    \r\n    \r\n\r\n");
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
