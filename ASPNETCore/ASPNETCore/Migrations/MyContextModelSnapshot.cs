// <auto-generated />
using System;
using ASPNETCore.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ASPNETCore.Migrations
{
    [DbContext(typeof(MyContext))]
    partial class MyContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

<<<<<<< HEAD
            modelBuilder.Entity("ASPNETCore.Models.Address", b =>
=======
            modelBuilder.Entity("ASPNETCore.Models.District", b =>
>>>>>>> Anindya
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

<<<<<<< HEAD
                    b.Property<string>("StreetAddress1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StreetAddress2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TerritoryId")
=======
                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProvinceId")
>>>>>>> Anindya
                        .HasColumnType("int");

                    b.HasKey("Id");

<<<<<<< HEAD
                    b.HasIndex("TerritoryId");

                    b.ToTable("TB_M_Address");
                });

            modelBuilder.Entity("ASPNETCore.Models.Employee", b =>
=======
                    b.HasIndex("ProvinceId");

                    b.ToTable("TB_M_District");
                });

            modelBuilder.Entity("ASPNETCore.Models.Province", b =>
>>>>>>> Anindya
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

<<<<<<< HEAD
                    b.Property<int?>("AddressId")
                        .HasColumnType("int");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

=======
>>>>>>> Anindya
                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

<<<<<<< HEAD
                    b.HasIndex("AddressId");

                    b.ToTable("TB_M_Employee");
                });

            modelBuilder.Entity("ASPNETCore.Models.Territory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ZipCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TB_M_Territory");
                });

            modelBuilder.Entity("ASPNETCore.Models.Address", b =>
                {
                    b.HasOne("ASPNETCore.Models.Territory", "Territory")
                        .WithMany("Address")
                        .HasForeignKey("TerritoryId");
                });

            modelBuilder.Entity("ASPNETCore.Models.Employee", b =>
                {
                    b.HasOne("ASPNETCore.Models.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId");
=======
                    b.ToTable("TB_M_Province");
                });

            modelBuilder.Entity("ASPNETCore.Models.District", b =>
                {
                    b.HasOne("ASPNETCore.Models.Province", "Province")
                        .WithMany("Districts")
                        .HasForeignKey("ProvinceId");
>>>>>>> Anindya
                });
#pragma warning restore 612, 618
        }
    }
}
